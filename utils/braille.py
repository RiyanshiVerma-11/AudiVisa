# utils/braille.py

# üî° Braille Unicode mappings for alphabets a‚Äìz
braille_alphabet = {
    "a": "‚†Å", "b": "‚†É", "c": "‚†â", "d": "‚†ô", "e": "‚†ë",
    "f": "‚†ã", "g": "‚†õ", "h": "‚†ì", "i": "‚†ä", "j": "‚†ö",
    "k": "‚†Ö", "l": "‚†á", "m": "‚†ç", "n": "‚†ù", "o": "‚†ï",
    "p": "‚†è", "q": "‚†ü", "r": "‚†ó", "s": "‚†é", "t": "‚†û",
    "u": "‚†•", "v": "‚†ß", "w": "‚†∫", "x": "‚†≠", "y": "‚†Ω", "z": "‚†µ"
}

# üî¢ Digits in Braille use a-j with a leading number sign ‚†º
braille_digits = {
    "1": "‚†Å", "2": "‚†É", "3": "‚†â", "4": "‚†ô", "5": "‚†ë",
    "6": "‚†ã", "7": "‚†õ", "8": "‚†ì", "9": "‚†ä", "0": "‚†ö"
}

def convert_to_braille(text):
    """
    Converts input text (letters and digits) into Braille.
    - Letters are mapped to Braille letters.
    - Digits are prefixed with ‚†º and mapped to a‚Äìj Braille.
    - Spaces are preserved.
    - Punctuation is ignored for now (can be extended later).
    """
    output = ""
    for char in text:
        if char.isalpha():
            output += braille_alphabet.get(char.lower(), "")
        elif char.isdigit():
            output += "‚†º" + braille_digits[char]
        elif char == " ":
            output += " "
        else:
            # Punctuation and other symbols are ignored.
            output += ""
    return output
